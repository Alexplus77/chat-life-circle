{"version":3,"sources":["components/Message.jsx","components/Loading.jsx","App.js","index.js"],"names":["Message","item","handleRemove","message","userId","id","className","cn","localStorage","getItem","onClick","Loading","role","App","useState","data","setData","value","setValue","isLoading","setIsLoading","isResponse","setIsResponse","useEffect","setItem","nanoid","fetch","then","response","json","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","length","map","onSubmit","onChange","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAeeA,EAXD,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,aACXC,EAAqBF,EAArBE,QAASC,EAAYH,EAAZG,OAAQC,EAAIJ,EAAJI,GACxB,OAEI,sBACIC,UAAWC,IAAG,qBAAsB,CAAC,4BAA6BH,IAAWI,aAAaC,QAAQ,YADtG,UAEcN,EAAS,IACnB,mBAAGO,QAAS,kBAAMR,EAAaG,IAAKC,UAAU,cAAc,cAAY,WADnED,ICJFM,EALC,WACd,OAAO,qBAAKL,UAAU,eAAeM,KAAK,SAAnC,SACH,sBAAMN,UAAU,UAAhB,2BC+DSO,MA5Df,WACI,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAmBC,EAAnB,KAEJC,qBAAU,WACNf,aAAagB,QAAQ,SAAUC,iBACjC,IAEEF,qBAAU,WACNG,MAAM,kCAAkCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAZ,GAC3EC,EAAQD,QAGd,CAACM,IAEH,IACMS,EAAe,SAACC,GAClBA,EAAEC,iBACFV,GAAeD,GACfD,GAAa,GACbM,MAAM,iCAAkC,CACpCO,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAClC,QAASc,EAAOb,OAAQI,aAAaC,QAAQ,cACpEkB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAZ,GACtCK,GAAa,GACbF,EAAS,QAIXhB,EAAe,SAACG,GAClBiB,GAAeD,GACvBD,GAAa,GACLM,MAAM,kCAAD,OAAmCrB,GAAM,CAC1C4B,OAAQ,WACTN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAZ,GAClDK,GAAa,OAGT,OACI,qCACA,qBAAKd,UAAU,YAAf,SACI,sBAAKA,UAAU,qBAAf,YACK,OAACS,QAAD,IAACA,OAAD,EAACA,EAAMuB,SAAU,qGADtB,OAEMvB,QAFN,IAEMA,OAFN,EAEMA,EAAMwB,KAAI,SAACtC,GAAD,OAAU,cAAC,EAAD,CAAwBkB,UAAWA,EAAWjB,aAAcA,EAAcD,KAAMA,GAAlEwB,kBAClCN,GAAa,cAAC,EAAD,SAGnB,uBAAMqB,SAAUV,EAAcxB,UAAU,OAAxC,UACI,uBAAOA,UAAU,QAAQmC,SApChB,SAACV,GAAD,OAAOb,EAASa,EAAEW,OAAOzB,QAoCeA,MAAOA,IACxD,wBAAQX,UAAU,SAASkC,SAAUV,EAArC,uB,MCvDhBa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.222ee7c8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport cn from 'classnames'\r\n\r\n\r\nconst Message=({item, handleRemove})=>{\r\n    const {message, userId, id}=item\r\n    return(\r\n\r\n        <div\r\n            className={cn('message my-message', {'message anonymous-message': userId !== localStorage.getItem('userId')})}\r\n            key={id}>{message}{' '}\r\n            <i onClick={() => handleRemove(id)} className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        </div>\r\n    )\r\n}\r\nexport default Message","\r\nconst Loading = () =>{\r\n  return(<div className=\"spinner-grow\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n  </div>)\r\n}\r\nexport default Loading","import React, {useEffect, useState} from \"react\";\nimport 'App.css';\nimport {nanoid} from \"nanoid\";\nimport Message from \"./components/Message\";\nimport Loading from \"./components/Loading\";\n\nfunction App() {\n    const [data, setData] = useState(null)\n    const [value, setValue] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    const [isResponse, setIsResponse]=useState(false)\n\nuseEffect(()=>{\n    localStorage.setItem('userId', nanoid())\n},[])\n\n    useEffect(() => {\n        fetch('http://localhost:8080/messages').then(response => response.json()).then(data => {\n            setData(data)\n        })\n\n    },[isResponse])\n\n    const handleChange = (e) => setValue(e.target.value)\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setIsResponse(!isResponse)\n        setIsLoading(true)\n        fetch('http://localhost:8080/messages', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({message: value, userId: localStorage.getItem('userId')})\n        }).then(response => response.json()).then(data => {\n            setIsLoading(false)\n            setValue('')\n        })\n    }\n\n    const handleRemove = (id) => {\n        setIsResponse(!isResponse)\nsetIsLoading(true)\n        fetch(`http://localhost:8080/messages/${id}`, {\n            method: 'DELETE'\n        }).then(response => response.json()).then(data => {\nsetIsLoading(false)\n        })\n    }\n    return (\n        <>\n        <div className='container'>\n            <div className='container-messages'>\n                {!data?.length && \"Сообщений пока нет\"}\n                { data?.map((item) => <Message key={nanoid()} isLoading={isLoading} handleRemove={handleRemove} item={item}/>)}\n                { isLoading && <Loading/>}\n            </div>\n        </div>\n            <form onSubmit={handleSubmit} className='form'>\n                <input className='input' onChange={handleChange} value={value}/>\n                <button className='button' onSubmit={handleSubmit}>Ok</button>\n            </form>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}